DEGEN – Readme file by m0°ntan
0. Contents
1. Project Name
2. Project Inspiration
3. Project Goal
	3.1. Rough Schedule
8<--------------------------------------------------------------------------
1. Project Name
DEGEN, the current working name for this project is composed of the ISO 639 language code for German (de) and "gen" which is short for "generate".
2. Project Inspiration
The project resumes the coursework on a mostly theoretical approach acquired in a computer linguistics course given by Dr. Gerd Willée at the University of Bonn in 2005 and which has haunted my mind ever since. This new approach here, however, takes the structural basis one level deeper into language, namely to the realm of morphemes which wasn't intended by the original coursework. This is aimed at tapping the potential to generate logically formed neologisms as elements of a phrase
3. Project Goal
The final goal of this project is to create a means to autogenerate coherent and grammatical German texts based on a set of grammar rules and dictionaries in XML format.
Here textual coherence signifies that the sentences of the generated results must be anaphorically referenced and must derive their semantic substance from one common topical area or, simply put, must not be arbitrarily composed in respect to their content.
Grammatical means that each of the sentences generated should be flawlessly adhering to German grammar rules.
	3.1. Rough Schedule
	There shall be no deadlines to be met in alpha phase, given the humongousness of the aspired accomplishment and the fact that creating and steamlining such a framework will take heaps of experimenting.
	However, the basic stages are defined as follows:
		(1) Create a structure for a standalone [morpheme dictionary] for the German language in XML format and fill it with data.
		(2) Create a structure for German [inflexion dictionaries] in XML format which contains references to the morpheme dictionary; include attributes with each entry accounting for either Chomsky's [transformational grammar], Dik's [functional grammar] or any other useful theory; then create at least one dictionary containing basic German vocabulary based on that structure.
		(3) Create a file (XML?) structure to contain [grammar rules] including word order and inflexional relationships; fill it with data.
		(4) Develop a program that can apply the above files to autogenerate and publish randomly flavoured, yet coherent and grammatical blog posts. Preferably the software lets the user select a basic topic and coherence level.
		(5) Complement the inflection dictionary library with a potentially infinite number of additional modular XML dictionaries on all sorts of subjects (e.g. different jargons, slang, specialized scholarly language and so forth)
		(6) Develop a program with the ability to create new dictionary modules by forming new words as entries based on the morpheme dictionary.
		(7) Once all of the above is accomplished, think about taking this to a phonological level to be able to arbitrarily generate imaginary words. Just to give one simple example: Imitate the {consonant|vowel|double consonant|[ə]} structure of the German words Lippe, Robbe, Wille, Bulle, Ratte, Mitte, Wette or Macke to form imaginary words such as "Püffe", "Schagge", "Zirre", etc.